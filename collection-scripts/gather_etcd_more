#!/bin/bash

#Safeguards
set -o nounset
set -o errexit
set -o pipefail

source "$(dirname "$0")"/monitoring_common.sh

MIN_TIME="$(date -d '24 hours ago' +%s%3N)"

BASE_COLLECTION_PATH="/must-gather"
ETCD_LOG_PATH="${BASE_COLLECTION_PATH}/etcd_info"

mkdir -p ${ETCD_LOG_PATH}

echo "INFO: Starting getting more etcd information"

PIDS=()

METRIC_MATCHES=(
    '--match=etcd_disk_wal_fsync_duration_seconds_bucket{job=~".*etcd.*"}'
    '--match=etcd_network_peer_sent_failures_total{job=~".*etcd.*"}'
    '--match=etcd_network_peer_round_trip_time_seconds_bucket{job=~".*etcd.*"}'
    '--match=etcd_server_proposals_failed_total{job=~".*etcd.*"}'
    '--match=etcd_disk_backend_commit_duration_seconds_bucket{job=~".*etcd.*"}'
    '--match=grpc_server_handling_seconds_bucket{job=~".*etcd.*", grpc_method!="Defragment", grpc_type="unary"}'
    '--match=grpc_server_handled_total{job=~".*etcd.*"}'
)
metrics_gather "${ETCD_LOG_PATH}" --min-time="${MIN_TIME}" "${METRIC_MATCHES[@]}" &
PIDS+=($!)

echo "INFO: Waiting for more etcd info collection to complete ..."
wait "${PIDS[@]}"
echo "INFO: Done collecting more etcd information"

# force disk flush to ensure that all data gathered is accessible in the copy container
sync
